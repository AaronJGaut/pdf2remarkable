#!/usr/bin/env python
"""Transfer a pdf to remarkable device

Based on this shell script:
    https://github.com/adaerr/reMarkableScripts/blob/master/pdf2remarkable.sh

This script assumes some prior setup:

- You must set up passwordless ssh to the host (default: root@remarkable)
- For .cbz files you need the ebook-convert binary provided by calibre

"""
import argparse

parser = argparse.ArgumentParser()
parser.add_argument("file", nargs="+")
parser.add_argument("-r", "--restart", action="store_true")
parser.add_argument("--manga", action="store_true")
parser.add_argument("--host", default="root@remarkable")
args = parser.parse_args()

import uuid
import json
import glob
import tempfile
import os
import subprocess
import shutil
import time

with tempfile.TemporaryDirectory() as tmpdir:
    for file in args.file:
        if not os.path.exists(file):
            warnings.warn(f"Skipping {file}: doesn't exist")
            continue

        name, *_, extension = os.path.splitext(os.path.basename(file))
        extension = extension.lower()
        if extension not in [".pdf", ".epub", ".cbz"]:
            warnings.warn(f"Skipping {file}: bad extension")
            continue

        file_uuid = str(uuid.uuid4())
        if extension == ".cbz":
            cmd = ["ebook-convert", file, f"{tmpdir}/{file_uuid}.pdf", "--comic-image-size", "1404x1872", "--disable-trim", "--keep-aspect-ratio"]
            if args.manga:
                cmd.append("--right2left")
            cmd.extend(["--custom-size", "8.25x11", "--output-format", "jpg"])
            subprocess.call(cmd)
            extension = ".pdf"
        else:
            shutil.copyfile(file, f"{tmpdir}/{file_uuid}{extension}")

        metadata = {
            "deleted": False,
            "lastModified": str(int(time.time() * 1000)),
            "metadatamodified": False,
            "modified": False,
            "parent": "",
            "pinned": False,
            "synced": False,
            "type": "DocumentType",
            "version": 1,
            "visibleName": f"{name}{extension}",
        }
        with open(f"{tmpdir}/{file_uuid}.metadata", "w") as f:
            json.dump(metadata, f)

        if extension == ".pdf":
            content = {
                "extraMetaData": {},
                "fileType": "pdf",
                "fontName": "",
                "lastOpenedPage": 0,
                "lineHeight": -1,
                "margins": 100,
                "pageCount": 1,
                "textScale": 1,
                "transform": {
                    "m11": 1,
                    "m12": 1,
                    "m13": 1,
                    "m21": 1,
                    "m22": 1,
                    "m23": 1,
                    "m31": 1,
                    "m32": 1,
                    "m33": 1,
                }
            }
        elif extension == ".epub":
            content = {
                "fileType": "epub",
            }
        else:
            raise NotImplementedError
        with open(f"{tmpdir}/{file_uuid}.content", "w") as f:
            json.dump(content, f)

    cmd = ["scp"] + glob.glob(f"{tmpdir}/*") + [f"{args.host}:~/.local/share/remarkable/xochitl/"]
    print(" ".join(cmd))
    subprocess.call(cmd)
    if args.restart:
        cmd = ["ssh", args.host, "systemctl", "restart", "xochitl"]
        print(" ".join(cmd))
        subprocess.call(cmd)
